/*
 * Copyright (C) 2016 Matej Hrazdira.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

$$$ BGN $$$
#ifndef JNICACHE_H_
#define JNICACHE_H_

#include <jni.h>
#include <vector>

namespace corbabinding {

struct JniCache {
	
	$$$ JNI CACHE HEADER $$$
	struct {
		struct {
			struct {
				jclass $$$CLS$$$;
				jmethodID $$$CTOR$$$;
				jmethodID booleanValue;
			} Boolean;
			struct {
				jclass $$$CLS$$$;
				jmethodID $$$CTOR$$$;
				jmethodID byteValue;
			} Byte;
			struct {
				jclass $$$CLS$$$;
				jmethodID $$$CTOR$$$;
				jmethodID intValue;
			} Integer;
			struct {
				jclass $$$CLS$$$;
				jmethodID $$$CTOR$$$;
				jmethodID longValue;
			} Long;
			struct {
				jclass $$$CLS$$$;
				jmethodID $$$CTOR$$$;
				jmethodID floatValue;
			} Float;
			struct {
				jclass $$$CLS$$$;
				jmethodID $$$CTOR$$$;
				jmethodID doubleValue;
			} Double;
			struct {
				jclass $$$CLS$$$;
				jmethodID $$$CTOR$$$;
				jmethodID charValue;
			} Character;
		} lang;
		struct {
			struct {
				jclass $$$CLS$$$;
				jmethodID $$$CTOR$$$;
			} ArrayList;
			struct {
				jmethodID add;
				jmethodID get;
				jmethodID size;
			} List;
		} util;
	} java;

	JniCache(JNIEnv * $$$ENV$$$);
	virtual ~JniCache();
};

} /* namespace corbabinding */

#endif /* JNICACHE_H_ */