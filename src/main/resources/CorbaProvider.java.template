/*
 * Copyright (C) 2016 Matej Hrazdira.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

$$$ BGN $$$
package $$$PACKAGE$$$;

public class $$$CLS_NAME$$$ {

	private static final int NULL_PTR = 0x0;

	private long mNativeWrapper = NULL_PTR;

	public $$$CLS_NAME$$$(String[] orbArgs, String eventServiceName) throws $$$CORBA_SYS_EXCEPTION$$$ {
		mNativeWrapper = init(orbArgs, eventServiceName);
	}

	private native long init(final String[] orbArgs, final String eventServiceName) throws $$$CORBA_SYS_EXCEPTION$$$;

	public <T> T resolve(Class<T> cls, String name) throws $$$CORBA_SYS_EXCEPTION$$$ {
		if (mNativeWrapper == NULL_PTR) {
			throw new $$$ALREADY_DISPOSED_EXCEPTION$$$();
		}
		return resolveImpl(mNativeWrapper, cls.getName(), name);
	}

	private native <T> T resolveImpl(final long nativeWrapper, final String className, final String corbaName) throws $$$CORBA_SYS_EXCEPTION$$$;

	public void dispose() {
		if (mNativeWrapper != NULL_PTR) {
			disposeImpl(mNativeWrapper);
			mNativeWrapper = NULL_PTR;
		}
	}

	private native void disposeImpl(final long nativeWrapper);

	public long getNativeWrapper() throws $$$ALREADY_DISPOSED_EXCEPTION$$$ {
		if (mNativeWrapper == NULL_PTR) {
			throw new AlreadyDisposedException();
		}
		return mNativeWrapper;
	}
}
